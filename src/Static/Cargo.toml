[package]
name = "Static"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
#async<+>async<+>async<+>async<+>async<+>async<+>async<+>async<+>async<+>
tokio = { version = "*", features = ["full"] }#:全域执行async/await>
futures = "*"#:区域执行async/await>
async-trait = "*"#:async-trait>[1.68<=版本使用]
flume = { version = "*", features = ["async"] }#:std.mpsc替代>
rayon = "*"#:并行>
bevy_reflect = { version = "*", features = ["bevy_math", "documentation", "smallvec", "glam"] }#:反射>
#monoio = "*"#:runtime>
core_affinity = "*"#:cpu负载>
#async<+>async<+>async<+>async<+>async<+>async<+>async<+>async<+>async<+>

#database<+>database<+>database<+>database<+>database<+>database<+>database<+>
chrono = "*"#:Mysql|时间>
rbatis = { version = "*", features = ["rbatis-macro-driver"] }#:ORM(A)Mysql>
rbdc = "*"#:ORM(B)Mysql>
rbdc-mysql = "*"#:ORM(C)Mysql>
rbs = "*"#ORM(D)Mysql>
mysql_async = "*"#:Mysql语句执行>
deadpool-redis = { version = "*", features = ["serde"] }#:Redis链接>
sea-orm = { version = "*", features = ["sqlx-postgres", "sqlx-mysql", "runtime-tokio", "runtime-tokio-native-tls", "macros", "postgres-array", "with-json", "with-chrono", "uuid"] }#:ORM>
sea-query = { version = "*", features = ["postgres-types", "postgres-interval", "postgres-array", "backend-mysql", "backend-postgres", "thread-safe", "attr", "derive"] }#:动态查询>
#tokio-postgres = "*"#:postgres语句执行>
#database<+>database<+>database<+>database<+>database<+>database<+>database<+>

#serialization<+>serialization<+>serialization<+>serialization<+>serialization<+>
serde = { version = "*", features = ["derive"] }#:数据序列>
#serde_json = "*"#:json序列>
#serde_json_borrow = "*"#:json>
#serde_yaml = "*"#:yaml>
#toml = {version = "*", features = ["indexmap"]}#:toml>
schemars = { version = "*", features = ["url", "enumset", "arrayvec07"] }#:代码json>
#bincode = "*"#:结构编码>
#data-encoding = "*"#:数据编码>
#combine = "*"#:数据解析>
#nom = "*"#:语法解析>
#datafusion = "*"#:Apache查询引擎>
bytes = { version = "*", features = ["serde"] }#:|字节处理>
#quick-xml = { version = "*", features = ["serde", "async-tokio", "serialize"] }#:配置文件>
#csv = "*"#:csv解析>
#rust_decimal="*"#:小数>
itertools = "*"#:迭代器>
#serialization<+>serialization<+>serialization<+>serialization<+>serialization<+>

#thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>
kanal = "0.1.0-pre7"#:线程通信Bata>
thread_local = "*"#:线程数据副本>
#thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>thread<+>

#dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>
lazy_static = "*"#:惰性初始>
once_cell = "*"#:|Cell模式全局数据>
stretto = { version = "*", features = ["full"] }#:缓存>
arc-swap = "*"#:原子锁>
sync_cow = "*"#:读写克隆>
#cacache = { version = "*", features = ["tokio-stream","async-std"] }#:磁盘>
#dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>dataInitial<+>

#dataOptimization<+>dataOptimization<+>dataOptimization<+>dataOptimization<+>dataOptimization<+>
hashbrown = { version = "*", features = ["serde", "ahash", "rayon"] }#:|哈希(性能)>
spin = "*"#:|自旋锁>
parking_lot = { version = "*", feature = ["const_fair_mutex", "const_mutex", "const_reentrant_mutex", "const_rwlock"] }#:数据锁>
intrusive-collections = "*"#:聚合表>
#compact_str = "*"#:String优化版>
#bincode = "*"#:编码转译>
#bytes = "*"#:编码>
ph = "*"#:hash数组>
#data-encoding = "*"#:数据编码>
#dataOptimization<+>dataOptimization<+>dataOptimization<+>dataOptimization<+>dataOptimization<+>

#eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>
jni = "*"#:java交互>
#num-bigint = { version = "*", features = ["rand"] }#:大随机(rand=0.8可兼容)>
#async-stream = "*"#:异步迭代>
#async-graphql = { version = "*", features = ["tokio", "url", "uuid", "cbor", "hashbrown", "bson"] }#:请求机>
#libc = "*"#:c类型>
anyhow = "*"#:Result兼容处理>
thiserror = "*"#:错误指定>
fast_log = "*"#:log(B)>
ftlog = "*"#log(C)>
#opener = "*"#:默认开启>
#whoami = "*"#:环境ID>
#dotenv = "*"#:环境解析>
#sha256 = "*"#:文件hash>
#configparser="*"#:文件启动>
#comfy-table = "*"#:Shll界面>
#dialoguer = { version = "*", features = ["fuzzy-matcher", "fuzzy-select", "history", "completion"] }#:shell>
#clap = { version = "*", features = ["derive", "deprecated", "env", "wrap_help", "string"] }#:Shll命令解析>
sysinfo = "*"#:系统信息>
#enigo = { github = "https://github.com/enigo-rs/enigo" }#:操作键盘>
#async-channel = "*"#:线程通信>
#eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>eventHandling<+>

#network<+>network<+>network<+>network<+>network<+>network<+>network<+>network<+>network<+>
uuid = { version = "*", features = ["v4", "v7"] }#:ID>
ssh-rs = "*"#:ssh>
#reqwest = { version = "*", features = ["json", "socks", "stream", "blocking"] }#:http处理[单线程阻塞]A>
#scraper = "*"#:Css解析http处理B>
tarpc = { version = "*", features = ["tokio1", "serde1", "serde-transport", "serde-transport-json", "tokio-serde"] }#:RPC>
quinn = "*"#:QUIC>
#async-graphql = { version = "*", features = ["tokio", "url", "uuid", "cbor", "hashbrown", "dataloader"] }#:请求机>
#native-tls = { version = "*", features = ["alpn", "vendored"] }#:tls网络>
#pyo3 = {version ="*",features = ["extension-module"] }#:python交互>
#network<+>network<+>network<+>network<+>network<+>network<+>network<+>network<+>network<+>

#Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>
#actix-cors = "*"#:Web性能A>
#actix-web = { version = "*", features = ["secure-cookies", "actix-web-codegen"] }#:Web性能B>
#actix-rt = { version = "*", features = ["actix-macros", "tokio-uring"] }#:Web性能C>
#rocket = "*"#:Web安全>
#tower = { version = "*", features = ["full"] }#:Web构建>
#jsonwebtoken = "*"#:json验证>
#warp = {version = "*", features = ["websocket","tokio-tungstenite"]}#:https构建
#Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>Web<+>
Error = { path = "../Error" }
